name: Publish

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_w:
    name: "Build for Windows"
    runs-on: windows-latest

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install Node and NPM
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Install dependencies
        run: |
          npm install --legacy-peer-deps
          npm run postinstall
          npm run build

      - name: Build binaries for Windows
        env:
          WIN_CSC_LINK: ${{ secrets.WIN_CSC }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
        run: |
          npm exec -- electron-builder build --win --publish never


      - uses: actions/upload-artifact@v3
        with:
          name: artifact_w
          path: |
            release/build/sbom-workbench*.exe
            release/build/latest.yml
            release/build/*exe.blockmap

  build_m:
    name: "Build for MacOS"
    runs-on: macos-latest

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install Node and NPM
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Install dependencies
        run: |
          npm install --legacy-peer-deps
          npm run postinstall
          npm run build

      - name: Build Binaries for MacOs & Windows
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        run: |
          npm exec -- electron-builder build --mac --publish never


      - uses: actions/upload-artifact@v3
        with:
          name: artifact_m
          path: |
            release/build/sbom-workbench*.dmg
            release/build/latest-mac.yml
            release/build/*dmg.blockmap

  build_l:
    name: "Build for Linux"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install Node and NPM
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Install and build
        run: |
          npm install --legacy-peer-deps
          npm run postinstall
          npm run build

      - name: Build binaries for linux
        run: |
          npm exec -- electron-builder build --linux --publish never

      - uses: actions/upload-artifact@v3
        with:
          name: artifact_l
          path: |
            release/build/sbom-workbench*.AppImage
            release/build/latest-linux.yml


  create_release:
    needs: [build_w, build_m, build_l]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact W
        uses: actions/download-artifact@v2
        with:
          name: artifact_w

      - name: Download artifact M
        uses: actions/download-artifact@v2
        with:
          name: artifact_m

      - name: Download artifact L
        uses: actions/download-artifact@v2
        with:
          name: artifact_l

      - name: Publish release draft
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_PROMPT_DISABLED: "disable"
        run: |
          gh release create ${{github.ref_name}} \
                            --repo ${{ github.server_url }}/${{ github.repository }} \
                            --generate-notes \
                            --draft \
                            $(ls *.AppImage *.exe *.dmg *.yml *.blockmap)
